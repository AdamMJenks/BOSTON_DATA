821 * 12
c(s, colors, the_labs)
list(s, colors, the_labs)
toJSON(list(s, colors, the_labs))
cat(toJSON(list(s, colors, the_labs)))
cat(toJSON(list(scores=s, colors=colors, labsthe_labs)))
cat(toJSON(list(scores=s, colors=colors, labs=the_labs)))
shiny::runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
library(rgdal)
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
writeOGR(Boston_shape, "test.geojson", layer = "geojson",driver = "GeoJSON")
ls()
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
writeOGR(Boston_shape, tempfile(), layer = "geojson",
driver = "GeoJSON")
writeOGR(Boston_shape@data, tempfile(), layer = "geojson",
driver = "GeoJSON")
spToGeoJSON(Boston_shape)
runApp('BOSTON_DATA')
runApp('BOSTON_DATA')
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
is(Boston_Shape)
is(Boston_shape)
class(Boston_shape)
geojson_json(Boston_shape)
library(geojsonio)
geojson_json(Boston_shape)
geojson_json(Boston_shape@data)
file_to_geojson(Boston_shape, output=".")
is(Boston_shape)
spToGeoJSON <- function(sp_obj){
temp_file<-tempfile()
writeOGR(sp_obj, temp_file,layer = "geojson", driver = "GeoJSON")
geojs <- paste(readLines(temp_file), collapse=" ")
file.remove(temp_file)
return(geojs)
}
spToGeoJSON(Boston_shape)
library(dplyr)
# Read and format DFs -----------------------------------------------------
load('data/2016_energy_parsed')
load('data/geocode.Rdata')
load("data/geocode_land.Rdata")
land_parcels <- read.csv("data/land_parcels.csv")
load("data/Boston_shape.RData")
#Boston_shape <- geojsonio::geojson_read("Data/Municipal_Building_Energy_Reporting_BERDO.geojson", what = "sp")
geocode_info <- geocode_info[-no_data]
lats <- lapply(geocode_info, function(x) lapply(x['geometry'], function(y) lapply(y['location'], function(z) z['lat'])))
lngs <- lapply(geocode_info, function(x) lapply(x['geometry'], function(y) lapply(y['location'], function(z) z['lng'])))
lats <- as.numeric(unlist(lats))
lngs <- as.numeric(unlist(lngs))
df_locations<-data.frame(lat=lats, lng=lngs)
lats2 <- lapply(geocode_info_land, function(x) lapply(x['geometry'], function(y) lapply(y['location'], function(z) z['lat'])))
lngs2 <- lapply(geocode_info_land, function(x) lapply(x['geometry'], function(y) lapply(y['location'], function(z) z['lng'])))
lats2 <- as.numeric(unlist(lats2))
lngs2 <- as.numeric(unlist(lngs2))
df_locations_land<-data.frame(lat=lats2, lng=lngs2)
land_parcels$lat <- lats2
land_parcels$lng <- lngs2
Energy_Parsed_Df[which(Energy_Parsed_Df$`Year Built` == '889'),]$`Year Built` <- '1889'
Energy_Parsed_Df[which(Energy_Parsed_Df$`Year Built` == '1000'),]$`Year Built`  <- '2000'
Energy_Parsed_Df$`Total Site Energy (kBTU)` <- as.numeric(Energy_Parsed_Df$`Total Site Energy (kBTU)`)
Energy_Parsed_Df$lat <- lats
Energy_Parsed_Df$lng <- lngs
Energy_Parsed_Df$year_built <- as.numeric(Energy_Parsed_Df$`Year Built`)
Energy_Parsed_Df <-  Energy_Parsed_Df %>%
mutate(Available_sqft_for_panels = sqft_available * 0.66,
Number_of_300watt_Panels = Available_sqft_for_panels / 20.67,
Kwh_potential = ((Number_of_300watt_Panels * 300)/1000) * sunlight_hours * 0.75,
Total_Site_Energy_Kwh = (`Total Site Energy (kBTU)` * 1000) * 0.00029307107017,
Total_Site_Energy_Kwh_Electricity = Total_Site_Energy_Kwh * `% Electricity`,
Cost_of_installation_gross = Number_of_300watt_Panels * 300 * 4.20,
Surplus_energy_production_possible = Kwh_potential - Total_Site_Energy_Kwh_Electricity) %>%
rename(Property_Name = `Property Name`)
Energy_Surplus_per_property_type <- Energy_Parsed_Df %>%
filter(!is.na(Surplus_energy_production_possible)) %>%
group_by(`Property Type`) %>%
summarise(Surplus_energy_production_possible = sum(Kwh_potential - Total_Site_Energy_Kwh_Electricity),
Total_cost = sum(Cost_of_installation_gross)) %>%
mutate(Exceeds_all_of_boston_by = Surplus_energy_production_possible - sum(Energy_Parsed_Df$Total_Site_Energy_Kwh_Electricity, na.rm = T))
spToGeoJSON <- function(sp_obj){
temp_file<-tempfile()
writeOGR(sp_obj, temp_file,layer = "geojson", driver = "GeoJSON")
geojs <- paste(readLines(temp_file), collapse=" ")
file.remove(temp_file)
return(geojs)
}
spToGeoJSON(Boston_shape)
geojson_json(spToGeoJSON(Boston_shape))
geojson_write'(spToGeoJSON(Boston_shape))
)
''
geojson_write(spToGeoJSON(Boston_shape))
library(rgdal)
library(sp)
writeOGR(Boston_shape, geojson_file,layer = "geojson", driver = "GeoJSON")
writeOGR(Boston_shape, 'test.geojson',layer = "geojson", driver = "GeoJSON")
getwd()
rm(list=ls())
shiny::runApp('BOSTON_DATA')
runApp('BOSTON_DATA')
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
rm(list=ls())
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
rm(list=ls())
runApp('BOSTON_DATA')
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
writeOGR(Boston_shape, "test.geojson", layer = "geojson",
driver = "GeoJSON")
load("data/Boston_shape.RData")
setwd("~/BOSTON_DATA/")
load("data/Boston_shape.RData")
spToGeoJSON <- function(sp_obj){
temp_file<-tempfile()
writeOGR(sp_obj, temp_file,layer = "geojson", driver = "GeoJSON")
geojs <- paste(readLines(temp_file), collapse=" ")
file.remove(temp_file)
return(geojs)
}
x<-spToGeoJSON(Boston_shape)
is(x)
toJSON(x)
library(rjsonlite)
library(jsonlite)
toJSON(x)
write_json(x, file="balls.json")
write_json(x, path="balls.json")
getwd()
write_json(toJSON(x), path="balls.json")
runApp()
load("data/Boston_shape.RData")
Boston_shape$height <- rescale(Boston_shape$Kwh_potential, c(0, 300))
the_data <- Energy_Parsed_Df
Boston_shape@data = left_join(Boston_shape@data, the_data, by = 'Property_Name', copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i,]
Boston_shape$height <- rescale(Boston_shape$Kwh_potential, c(0, 300))
writeOGR(Boston_shape, 'test.geojson', layer = "geojson", driver = "GeoJSON")
?sp::merge()
?sp::merge
Boston_shape = sp::merge(Boston_shape, the_data, by = 'Property_Name', copy = TRUE)
Boston_shape = sp::merge(Boston_shape@data, the_data, by = 'Property_Name', copy = TRUE)
is(Boston_shape)
Boston_shape[1:5,]
load("data/Boston_shape.RData")
dim(the_data)
the_data[1,]
dim(Boston_shape@data)
runApp()
the_data <- getData()
Boston_shape = sp::merge(Boston_shape@data, the_data, by = "Property_Name",
copy = TRUE)
Boston_shape = sp::merge(Boston_shape, the_data, by = "Property_Name",
copy = TRUE)
is(Boston_shape)
Boston_shape$ShapeSTArea
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
is(Boston_shape)
nrow(Boston_shape@data)
length(Boston_shape@polygons)
length(Boston_shape@plotOrder)
Boston_shape@bbox
Boston_shape[-2]
Boston_shape@proj4string
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
g<-geojson_json(Boston_shape)
g<-geojsonio::geojson_json(Boston_shape)
nrow(Boston_shape@data)
length(Boston_shape@polygons)
load("data/Boston_shape.RData")
nrow(Boston_shape@data)
g<-geojson_json(Boston_shape)
g<-geojsonio::geojson_json(Boston_shape)
geojson_write(g, file="boobs.geojson")
geojsonio::geojson_write(g, file="boobs.geojson")
Q
rm(list=ls())
load("data/Boston_shape.RData")
g<-geojsonio::geojson_json(Boston_shape)
geojsonio::geojson_write(g, file="boobs.geojson")
is(g)
g[[1]]
g[[2]]
g[1]
is(Boston_shape)
geojsonio::geojson_sp(Boston_shape)
geojsonio::geojson_write(Boston_shape)
getwd()
geojsonio::geojson_write(Boston_shape[1:3])
geojsonio::geojson_write(Boston_shape[[1]])
geojsonio::geojson_write(Boston_shape[1)
geojsonio::geojson_write(Boston_shape[1])
head(Boston_shape)
geojsonio::geojson_write(head(Boston_shape))
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
geojsonio::geojson_write(head(Boston_shape))
colorRamp
color.scale(Energy_Parsed_Df$Cost_of_installation_gross)
rm(list=ls())
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(Boston_shape@data$Cost_of_installation_gross)
geojsonio::geojson_write(Boston_shape)
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
geojsonio::geojson_write(Boston_shape)
rm(list=ls())
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
geojsonio::geojson_write(Boston_shape)
geojsonio::geojson_write(head(Boston_shape))
geojsonio::geojson_write(head(Boston_shape,n=500))
geojsonio::geojson_write(head(Boston_shape,n=1000))
geojsonio::geojson_write(head(Boston_shape,n=1500))
geojsonio::geojson_write(head(Boston_shape,n=1200))
geojsonio::geojson_write(head(Boston_shape,n=1300))
geojsonio::geojson_write(head(Boston_shape,n=1400))
length(Boston_shape)
nrow(Boston_shape)
geojsonio::geojson_write(head(Boston_shape,n=1364))
dim(Boston_shape@data)
length(Boston_shape@plotOrder)
Boston_shape@plotOrder
Boston_shape@polygons
Boston_shape@polygons[1]
Boston_shape@data$OBJECTID
match(Boston_shape@data$OBJECTID, Boston_shape@polygons$ID)
match(Boston_shape@data$OBJECTID, Boston_shape@polygons)
Boston_shape@polygons
Boston_shape@polygons[[1]]
names(Boston_shape@polygons[[1]])
names(Boston_shape@polygons@ID
)
Boston_shape@polygons[[1]]@ID
Boston_shape@polygons@ID
Boston_shape@polygons
lapply(Boston_shape@polygons, function(x) x@ID)
unlist(lapply(Boston_shape@polygons, function(x) x@ID))
match(unlist(lapply(Boston_shape@polygons, function(x) x@ID)), Boston_shape@data$OBJECTID)
rm(list=ls())
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape@data <- Boston_shape@data[-i, ]
Boston_shape@plotOrder <- Boston_shape@plotOrder[-i, ]
Boston_shape@polygons <- Boston_shape@polygons[-i, ]
Boston_shape@plotOrder
Boston_shape@polygons[-5]
Q
rm(list=ls())
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape@data <- Boston_shape@data[-i, ]
Boston_shape@plotOrder <- Boston_shape@plotOrder[-i]
Boston_shape@polygons <- Boston_shape@polygons[-i]
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
geojsonio::geojson_write(Boston_shape)
nrow(Boston_shape@data)
length(Boston_shape@polygons)
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
geojsonio::geojson_write(Boston_shape)
nrow(Boston_shape@data)
length(Boston_shape@plotOrder)
length(Boston_shape@polygons)
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
Boston_shape@data[1:3,]
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i, ]
geojsonio::geojson_write(Boston_shape)
nrow(Boston_shape@data)
length(Boston_shape@polygons)
Boston_shape@polygons
Boston_shape@data$OBJECTID
unique(Boston_shape@data$OBJECTID)
length(unique(Boston_shape@data$OBJECTID))
length(unique(Boston_shape@plotOrder))
length(unique(Boston_shape@polygons))
lapply(Boston_shape@polygons, function(x) x@ID)
as.character(lapply(Boston_shape@polygons, function(x) x@ID))
polygon_ids <- as.character(lapply(Boston_shape@polygons, function(x) x@ID))
match(polygon_ids, Boston_shape@data$OBJECTID)
match( Boston_shape@data$OBJECTID, polygon_ids)
which(is.na(match( Boston_shape@data$OBJECTID, polygon_ids)))
Boston_shape[[-5]]
Boston_shape[-5]
Q
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i]
geojsonio::geojson_write(Boston_shape)
Boston_shape@data$Pct_Electricity
Boston_shape@data$Pct_Gas
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 300))
Boston_shape@data$color <- color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
Boston_shape@data <- subset(Boston_shape@data, select = -c(Pct_Gas,
Pct_Electricity, Pct_Steam))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i]
geojsonio::geojson_write(Boston_shape)
color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross))
?color.scale
color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross, 'hsv'))
color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross, 'hcl'))
color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross, 'rgb'))
gsub("FF$", "", color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross, 'rgb')))
colorRampPalettegsub("FF$", "", color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross, 'rgb')))
colorRampPalette
colorRampPalette(c("blue", 'red'), rnorm(100, 100,100))
install.packages('colourscheme')
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2)
color.scale(y,c(0,1,1),c(1,1,0),0)
gsub("FF$", "", color.scale(y,c(0,1,1),c(1,1,0),0))
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=gsub("FF$", "", color.scale(y,c(0,1,1),c(1,1,0),0)),main="Color scale plot",
pch=16,cex=2)
x<-rnorm(20)
y<-rnorm(20)
# use y for the color scale
plot(x,y,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2)
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 400))
Boston_shape@data$color <- gsub("FF$", "", color.scale(as.numeric(Boston_shape@data$Cost_of_installation_gross)))
Boston_shape@data <- subset(Boston_shape@data, select = -c(Pct_Gas,
Pct_Electricity, Pct_Steam))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i]
geojsonio::geojson_write(Boston_shape)
#Create a function to generate a continuous color palette
rbPal <- colorRampPalette(c('red','blue'))
rbPal
#Create a function to generate a continuous color palette
rbPal <- colorRampPalette(c('red','yellow'))
rbPal
colorRampPalette(c('red','yellow'))
rbPal <- colorRampPalette(c('red','yellow'))
rbPa
rbPal
Boston_shape@data$color <- rbPal(10)[as.numeric(cut(as.numeric(Boston_shape@data$Cost_of_installation_gross),breaks = 10))]
Boston_shape@data$color
cut(as.numeric(Boston_shape@data$Cost_of_installation_gross),breaks = 10)
cut(
breaks = 10)
as.numeric(Boston_shape@data$Cost_of_installation_gross),
as.numeric(Boston_shape@data$Cost_of_installation_gross)
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 400))
rbPal <- colorRampPalette(c("red", "yellow"))
Boston_shape@data$color <- rbPal(10)[cut(as.numeric(Boston_shape@data$Cost_of_installation_gross),
breaks = 10)]
Boston_shape@data <- subset(Boston_shape@data, select = -c(Pct_Gas,
Pct_Electricity, Pct_Steam))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i]
geojsonio::geojson_write(Boston_shape)
Boston_shape@data$color
runApp()
the_data <- getData()
Boston_shape@data = left_join(Boston_shape@data, the_data,
by = "Property_Name", copy = TRUE)
Boston_shape@data$height <- rescale(Boston_shape@data$Kwh_potential,
c(0, 400))
rbPal <- colorRampPalette(c("green", "red"))
Boston_shape@data$color <- rbPal(10)[cut(as.numeric(Boston_shape@data$Cost_of_installation_gross),
breaks = 10)]
Boston_shape@data <- subset(Boston_shape@data, select = -c(Pct_Gas,
Pct_Electricity, Pct_Steam))
i <- which(is.na(Boston_shape@data$Kwh_potential))
Boston_shape <- Boston_shape[-i]
geojsonio::geojson_write(Boston_shape)
